#!/bin/sh

OSMAND_APPNAME="OsmAnd~"
OSMAND_VERSION="1.9.4"
OSMAND_VERCODE="196"
OSMAND_SUBDIR="android/OsmAnd"

# '+' enables, '-' disables
# As found in upstream's jenkins log
# OSMAND_FEATURES="-play_market -gps_status -parking_plugin -blackberry +amazon -route_nav"
# Our slightly modified version
OSMAND_FEATURES="-play_market +gps_status -parking_plugin -blackberry -amazon -route_nav"

err() {
	echo ERROR: "$@"
	exit 1
}

# They use ANDROID_SDK instead of ANDROID_HOME
if [ -z $ANDROID_SDK ] && [ -n $ANDROID_HOME ]
then
	export ANDROID_SDK="$ANDROID_HOME"
fi

if [ -d $OSMAND_SUBDIR ]
then
	cd $OSMAND_SUBDIR || err "Could not enter android/OsmAnd subdirectory"
fi

# Replace the name given to the full paid app
sed -i "s/\"OsmAnd+\"/\"$OSMAND_APPNAME\"/g" build.xml || err "Could not replace application name"

# Build native code
./old-ndk-build.sh || err "Failed to build native code"

# Do not use download_resources target:
sed  -i -e '/target name=\"-pre-build\"/s/download_resources,//' -i build.xml

# Download wrapper (TODO: build wrapper by ourselves)
wget http://builder.osmand.net:81/binaries/android/OsmAndCore_wrapper.jar -O libs/OsmAndCore_wrapper.jar

# Build the rest
ant \
	-Dsdk.dir="$ANDROID_SDK" \
	-Dndk.dir="$ANDROID_NDK" \
	-DBLACKBERRY_BUILD=false \
	-DBUILD_SUFFIX= \
	-Dbuild.version="$OSMAND_VERSION" \
	-DAPK_VERSION="$OSMAND_VERSION" \
	-Dbuild.version.code="$OSMAND_VERCODE" \
	-DAPK_NUMBER_VERSION="$OSMAND_VERCODE" \
	-DFEATURES="$OSMAND_FEATURES" \
	-DversionFeatures="$OSMAND_FEATURES" \
	-DCLEAN_CPP=false \
	-DPACKAGE_TO_BUILT=net.osmand.plus \
	-Dnet.osmand.plus= \
	-Dnativeoff=false \
	clean release || err "Failed to build OsmAnd (java) via ant"
